import time
from adafruit_servokit import ServoKit

#this script was generated by chat gpt3.5 august 3rd, 2023 version

min_angle = 0
max_angle = 0
servo_speed = 0
servo_channel =[0,4,8,12]


class ServoController:
    def __init__(self, servo_channel=servo_channel, min_angle=min_angle, max_angle=max_angle, servo_speed=servo_speed, direction=1):
        self.kit = ServoKit(channels=16)  # Change the number of channels as needed
        self.servo_channel = servo_channel
        self.min_angle = min_angle
        self.max_angle = max_angle
        self.servo_speed = servo_speed
        self.direction = direction

    def calibrate(self):
        #resets servos to safe position
        self.__calibrate_servo_one()
        time.sleep(.5)
        self.__calibrate_servo_two()
        time.sleep(.5)
        self.__calibrate_servo_three()
        time.sleep(.5)
        self.__calibrate_servo_four()

    def __calibrate_servo_one(self, kit):
       """ 
        self.min_angle = 80
        self.max_angle = 90
        self.servo_channel = 0
        self.servo_speed = 1

        for angle in range(self.min_angle, self.max_angle + 1, self.servo_speed * direction):
            kit.servo[self.servo_channel].angle = angle
            time.sleep(0.01)  # Adjust delay for smoother motion
        """
       kit.servo[servo_channel[0]].angle = 90

    def __calibrate_servo_two(self):

    def __calibrate_servo_three(self):
        
    def __calibrate_servo_four(self):

    def move_servo(self):
        try:
            # Move the servo from min to max angle
            for angle in range(self.min_angle, self.max_angle + 1, self.servo_speed * self.direction):
                self.kit.servo[self.servo_channel].angle = angle
                time.sleep(0.01)  # Adjust delay for smoother motion

            # Move the servo from max to min angle
            for angle in range(self.max_angle, self.min_angle - 1, -self.servo_speed * self.direction):
                self.kit.servo[self.servo_channel].angle = angle
                time.sleep(0.01)  # Adjust delay for smoother motion

        except KeyboardInterrupt:
            # Stop the servo and exit gracefully when Ctrl+C is pressed
            self.kit.servo[self.servo_channel].angle = None

if __name__ == "__main__":
    servo_controller = ServoController(servo_channel=servo_channel, min_angle=min_angle, max_angle=max_angle, servo_speed=servo_speed, direction=1)
    servo_controller.move_servo()
    calibrate = ServoController.calibrate()
